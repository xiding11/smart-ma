# Rebuild the source code only when needed
FROM node:20-slim AS builder

# Accept the build argument in the builder stage
ARG APP_VERSION
ARG CLICKHOUSE_HOST
ARG CLICKHOUSE_USER
ARG CLICKHOUSE_PASSWORD
ARG DATABASE_URL

WORKDIR /service

# Set proxy environment variables
ENV http_proxy=http://192.168.0.152:10811
ENV https_proxy=http://192.168.0.152:10811
ENV HTTP_PROXY=http://192.168.0.152:10811
ENV HTTPS_PROXY=http://192.168.0.152:10811
ENV no_proxy=localhost,127.0.0.1,::1
ENV NO_PROXY=localhost,127.0.0.1,::1

RUN yarn set version 4.1.1

RUN apt-get update -y && \
    apt-get install -y openssl

COPY *.json yarn.lock .yarnrc.yml ./
COPY .yarn .yarn
COPY ./packages/api/*.json ./packages/api/
COPY ./packages/backend-lib/*.json ./packages/backend-lib/
COPY ./packages/isomorphic-lib/*.json ./packages/isomorphic-lib/
COPY ./packages/emailo/*.json ./packages/emailo/

RUN yarn workspaces focus api --production && \
    cp -R node_modules production_node_modules
RUN yarn workspaces focus api emailo

COPY ./packages/emailo/ ./packages/emailo
COPY ./packages/backend-lib/ ./packages/backend-lib
COPY ./packages/isomorphic-lib/ ./packages/isomorphic-lib
COPY ./packages/api/ ./packages/api

# Set build-time environment variables to satisfy config validation
ENV CLICKHOUSE_HOST=${CLICKHOUSE_HOST:-http://localhost:8123}
ENV CLICKHOUSE_USER=${CLICKHOUSE_USER:-dittofeed}
ENV CLICKHOUSE_PASSWORD=${CLICKHOUSE_PASSWORD:-password}
ENV DATABASE_URL=${DATABASE_URL:-postgresql://postgres:password@localhost:5432/dittofeed}

RUN yarn workspace emailo build && \
    yarn workspace api build

# Production image
FROM node:20-slim AS runner

# Redefine the ARG in the production stage
ARG APP_VERSION

WORKDIR /service

RUN yarn set version 4.1.1

RUN apt-get update -y && \
    apt-get install -y openssl

COPY --from=builder /service/production_node_modules ./node_modules
COPY --from=builder /service/package.json ./package.json
COPY --from=builder /service/*.json /service/yarn.lock /service/.yarnrc.yml ./
COPY --from=builder /service/.yarn .yarn

COPY --from=builder /service/packages/api/dist ./packages/api/dist
COPY --from=builder /service/packages/api/package.json ./packages/api/package.json

COPY --from=builder /service/packages/backend-lib/dist ./packages/backend-lib/dist
COPY --from=builder /service/packages/backend-lib/package.json ./packages/backend-lib/package.json

COPY --from=builder /service/packages/isomorphic-lib/dist ./packages/isomorphic-lib/dist
COPY --from=builder /service/packages/isomorphic-lib/package.json ./packages/isomorphic-lib/package.json

COPY --from=builder /service/packages/emailo/dist ./packages/emailo/dist
COPY --from=builder /service/packages/emailo/package.json ./packages/emailo/package.json
# Set the environment variable
ENV APP_VERSION=${APP_VERSION}

# Clear proxy environment variables in production stage
ENV http_proxy=
ENV https_proxy=
ENV HTTP_PROXY=
ENV HTTPS_PROXY=
ENV no_proxy=
ENV NO_PROXY=

CMD ["yarn", "workspace", "api", "node", "./dist/scripts/startServer.js"]
